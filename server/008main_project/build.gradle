plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.stockholm'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final' //버전 수정
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' //추가
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// security 작업을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.0' //mail 전송을 위한 추가
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'com.google.code.gson:gson:2.8.8' // gson 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'software.amazon.awssdk:s3:2.17.52'  // AWS S3 의존성 추가
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}
